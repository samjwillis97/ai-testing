name: GitHub API Collection
version: 1.0.0
description: "Collection for interacting with the GitHub API"

# Base URL from variable set
base_url: "${variables.api.url}"

# Variable set configuration
variable_sets:
  - name: github
    description: "GitHub API parameters"
    defaultValue: "default"
    activeValue: "default"
    values:
      default:
        owner: "octocat"
        repo: "hello-world"
        issue_number: 1
        per_page: 30
        page: 1
        branch: "main"
        commit_sha: "6dcb09b5b57875f334f61aebed695e2e4193db5e"

# Variable set overrides
variable_set_overrides:
  api: "github"

# Authentication configuration
authentication:
  type: bearer
  token: "${variables.auth.token}"

# Requests in this collection
requests:
  - id: get-user
    name: "Get User"
    description: "Get a GitHub user by username"
    method: GET
    path: "/users/${variables.github.owner}"
    headers:
      Accept: "application/vnd.github.v3+json"
  
  - id: list-repos
    name: "List Repositories"
    description: "List repositories for a user"
    method: GET
    path: "/users/${variables.github.owner}/repos"
    headers:
      Accept: "application/vnd.github.v3+json"
    query:
      per_page: "${variables.github.per_page}"
      page: "${variables.github.page}"
      sort: "updated"
  
  - id: get-repo
    name: "Get Repository"
    description: "Get a specific repository"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}"
    headers:
      Accept: "application/vnd.github.v3+json"
  
  - id: list-branches
    name: "List Branches"
    description: "List branches in a repository"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/branches"
    headers:
      Accept: "application/vnd.github.v3+json"
    query:
      per_page: "${variables.github.per_page}"
      page: "${variables.github.page}"
  
  - id: get-branch
    name: "Get Branch"
    description: "Get a specific branch"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/branches/${variables.github.branch}"
    headers:
      Accept: "application/vnd.github.v3+json"
  
  - id: list-commits
    name: "List Commits"
    description: "List commits in a repository"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/commits"
    headers:
      Accept: "application/vnd.github.v3+json"
    query:
      per_page: "${variables.github.per_page}"
      page: "${variables.github.page}"
      sha: "${variables.github.branch}"
  
  - id: get-commit
    name: "Get Commit"
    description: "Get a specific commit"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/commits/${variables.github.commit_sha}"
    headers:
      Accept: "application/vnd.github.v3+json"
  
  - id: list-issues
    name: "List Issues"
    description: "List issues in a repository"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/issues"
    headers:
      Accept: "application/vnd.github.v3+json"
    query:
      per_page: "${variables.github.per_page}"
      page: "${variables.github.page}"
      state: "all"
      sort: "updated"
  
  - id: get-issue
    name: "Get Issue"
    description: "Get a specific issue"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/issues/${variables.github.issue_number}"
    headers:
      Accept: "application/vnd.github.v3+json"
  
  - id: create-issue
    name: "Create Issue"
    description: "Create a new issue"
    method: POST
    path: "/repos/${variables.github.owner}/${variables.github.repo}/issues"
    headers:
      Accept: "application/vnd.github.v3+json"
      Content-Type: "application/json"
    body:
      type: "json"
      content: |
        {
          "title": "Issue created with SHC",
          "body": "This is a test issue created using the SHC client.",
          "labels": ["bug", "documentation"]
        }
  
  - id: list-pull-requests
    name: "List Pull Requests"
    description: "List pull requests in a repository"
    method: GET
    path: "/repos/${variables.github.owner}/${variables.github.repo}/pulls"
    headers:
      Accept: "application/vnd.github.v3+json"
    query:
      per_page: "${variables.github.per_page}"
      page: "${variables.github.page}"
      state: "all"
      sort: "updated"
  
  - id: rate-limit
    name: "Rate Limit"
    description: "Check API rate limit status"
    method: GET
    path: "/rate_limit"
    headers:
      Accept: "application/vnd.github.v3+json"
